// <auto-generated />
using System;
using MTM_Warehouse.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MTM_Warehouse.Migrations
{
    [DbContext(typeof(AllDbContext))]
    [Migration("20240401121951_Initialize_DB")]
    partial class Initialize_DB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MTM_Warehouse.Entities.ApprovalJobs", b =>
                {
                    b.Property<int>("ApprovalJobsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalJobsId"));

                    b.Property<string>("Approval_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From_Warehouse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item_Quantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item_Space")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobProgressId")
                        .HasColumnType("int");

                    b.Property<string>("To_Warehouse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransportItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApprovalJobsId");

                    b.HasIndex("JobProgressId");

                    b.ToTable("ApprovalJobs_DbData");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.Approvals", b =>
                {
                    b.Property<string>("ApprovalsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApprovalJobsId")
                        .HasColumnType("int");

                    b.Property<string>("Approval_Job")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoginEmpId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApprovalsId");

                    b.HasIndex("ApprovalJobsId")
                        .IsUnique();

                    b.HasIndex("LoginEmpId");

                    b.ToTable("Approvals_DbData");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.EmpData", b =>
                {
                    b.Property<int>("EmpDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpDataId"));

                    b.Property<double?>("Address")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("Email")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("FirstDay")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("LastDay")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("Name")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("Phone")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("PinCode")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int?>("WarehouseInfoId")
                        .HasColumnType("int");

                    b.HasKey("EmpDataId");

                    b.HasIndex("WarehouseInfoId");

                    b.ToTable("EmpData_DbData");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.JobProgress", b =>
                {
                    b.Property<int>("JobProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobProgressId"));

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobProgressId");

                    b.ToTable("JobProgress_DbData");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.LoginEmp", b =>
                {
                    b.Property<int>("LoginEmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginEmpId"));

                    b.Property<string>("AccessRights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WarehouseInfoId")
                        .HasColumnType("int");

                    b.HasKey("LoginEmpId");

                    b.HasIndex("WarehouseInfoId");

                    b.ToTable("loginEmps_DbData");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.WarehouseInfo", b =>
                {
                    b.Property<int>("WarehouseInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseInfoId"));

                    b.Property<string>("W_Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("W_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("W_PercentFull")
                        .HasColumnType("float");

                    b.Property<string>("W_PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("W_SpaceAvailable")
                        .HasColumnType("float");

                    b.Property<double?>("W_TotalCapacity")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("WarehouseInfoId");

                    b.ToTable("WarehouseInfo_DbData");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.WarehouseItems", b =>
                {
                    b.Property<int>("WarehouseItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseItemsId"));

                    b.Property<double>("Item_Capacity_Quant")
                        .HasColumnType("float");

                    b.Property<string>("Item_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item_SpaceAccuired")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Item_Unit_Quant")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int?>("WarehouseInfoId")
                        .HasColumnType("int");

                    b.HasKey("WarehouseItemsId");

                    b.HasIndex("WarehouseInfoId");

                    b.ToTable("WarehouseItems_DbData");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.ApprovalJobs", b =>
                {
                    b.HasOne("MTM_Warehouse.Entities.JobProgress", "JobProgress")
                        .WithMany("ApprovalJobs")
                        .HasForeignKey("JobProgressId");

                    b.Navigation("JobProgress");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.Approvals", b =>
                {
                    b.HasOne("MTM_Warehouse.Entities.ApprovalJobs", "ApprovalJobs")
                        .WithOne("Approvals")
                        .HasForeignKey("MTM_Warehouse.Entities.Approvals", "ApprovalJobsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MTM_Warehouse.Entities.LoginEmp", "LoginEmp")
                        .WithMany("Approvals")
                        .HasForeignKey("LoginEmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovalJobs");

                    b.Navigation("LoginEmp");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.EmpData", b =>
                {
                    b.HasOne("MTM_Warehouse.Entities.WarehouseInfo", "WarehouseInfo")
                        .WithMany("EmpDatas")
                        .HasForeignKey("WarehouseInfoId");

                    b.Navigation("WarehouseInfo");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.LoginEmp", b =>
                {
                    b.HasOne("MTM_Warehouse.Entities.WarehouseInfo", "WarehouseInfo")
                        .WithMany("loginEmps")
                        .HasForeignKey("WarehouseInfoId");

                    b.Navigation("WarehouseInfo");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.WarehouseItems", b =>
                {
                    b.HasOne("MTM_Warehouse.Entities.WarehouseInfo", "WarehouseInfo")
                        .WithMany("WarehouseItems")
                        .HasForeignKey("WarehouseInfoId");

                    b.Navigation("WarehouseInfo");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.ApprovalJobs", b =>
                {
                    b.Navigation("Approvals");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.JobProgress", b =>
                {
                    b.Navigation("ApprovalJobs");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.LoginEmp", b =>
                {
                    b.Navigation("Approvals");
                });

            modelBuilder.Entity("MTM_Warehouse.Entities.WarehouseInfo", b =>
                {
                    b.Navigation("EmpDatas");

                    b.Navigation("WarehouseItems");

                    b.Navigation("loginEmps");
                });
#pragma warning restore 612, 618
        }
    }
}
